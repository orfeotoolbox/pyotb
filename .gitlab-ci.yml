default:
  image: $CI_REGISTRY/orfeotoolbox/otb-build-env/otb-ubuntu-native-develop-headless:20.04
  tags:
    - light
  interruptible: true

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  key: $CI_COMMIT_REF_SLUG
  paths:
    - .cache/pip

workflow:
  rules:
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS && $CI_PIPELINE_SOURCE == "push"
      when: never
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_REF_PROTECTED == "true"

stages:
  - Static Analysis
  - Tests
  - Documentation
  - Ship

#  -------------------------------- Static analysis --------------------------------

.static_analysis:
  stage: Static Analysis
  allow_failure: true
  rules:
    - changes:
        - pyotb/*.py

pydocstyle:
  extends: .static_analysis
  before_script:
    - pip install pydocstyle tomli
  script:
    - pydocstyle $PWD/pyotb

pylint:
  extends: .static_analysis
  before_script:
    - pip install pylint
  script:
    - pylint $PWD/pyotb

codespell:
  extends: .static_analysis
  rules:
    - changes:
        - "**/*.py"
        - "**/*.md"
  before_script:
    - pip install codespell
  script:
    - codespell {pyotb,tests,doc,README.md}

# -------------------------------------- Tests --------------------------------------

.tests:
  stage: Tests
  allow_failure: false
  rules:
    - changes:
        - "**/*.py"
  variables:
    OTB_ROOT: /opt/otb
    LD_LIBRARY_PATH: /opt/otb/lib
    OTB_LOGGER_LEVEL: INFO
    PYOTB_LOGGER_LEVEL: DEBUG
  artifacts:
    reports:
      junit: test-*.xml
  before_script:
    - pip install pytest
    - pip install .

test_core:
  extends: .tests
  script:
    - pytest --color=yes --junitxml=test-core.xml tests/test_core.py

test_numpy:
  extends: .tests
  script:
    - pytest --color=yes --junitxml=test-numpy.xml tests/test_numpy.py

test_pipeline:
  extends: .tests
  script:
    - pytest --color=yes --junitxml=test-pipeline.xml tests/test_pipeline.py

test_metadata:
  extends: .tests
  script:
    - pytest --color=yes --junitxml=test-metadata.xml tests/test_metadata.py

# -------------------------------------- Docs ---------------------------------------

docs:
  stage: Documentation
  # when: manual
  rules:
    - changes:
      - mkdocs.yml
      - doc/*
      - pyotb/*.py
  before_script:
    - apt update && apt install -y python3.8-venv
    - python3 -m venv docs_venv
    - source docs_venv/bin/activate
    - python3 -m pip install -U pip
    - python3 -m pip install -r doc/doc_requirements.txt
  script:
    - mkdocs build --site-dir public
  artifacts:
    paths:
      - public

# -------------------------------------- Ship ---------------------------------------

pypi:
  stage: Ship
  # when: manual
  only:
    - tags
  before_script:
    - apt update && apt install -y python3.8-venv
    - pip install build twine
  script:
    - python3 -m build
    - python3 -m twine upload --non-interactive -u __token__ -p $pypi_token dist/*
