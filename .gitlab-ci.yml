workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"

default:
  image: $CI_REGISTRY/orfeotoolbox/otb-build-env/otb-ubuntu-native-develop-headless:20.04
  tags:
    - light

stages:
  - Static Analysis
  - Documentation test
  - Tests
  - Ship

#  -------------------------------- Static analysis --------------------------------

.static_analysis:
  stage: Static Analysis
  allow_failure: true

codespell:
  extends: .static_analysis
  before_script:
    - pip install codespell
  script:
    - codespell {pyotb,tests}

flake8:
  extends: .static_analysis
  before_script:
    - pip install flake8
  script:
    - flake8 --max-line-length=120 $PWD/pyotb --ignore=F403,E402,F401,W503,W504

pydocstyle:
  extends: .static_analysis
  before_script:
    - pip install pydocstyle
  script:
    - pydocstyle $PWD/pyotb --convention=google

pylint:
  extends: .static_analysis
  before_script:
    - pip install pylint
  script:
    - pylint --max-line-length=120 $PWD/pyotb --disable=too-many-nested-blocks,too-many-locals,too-many-statements,too-few-public-methods,too-many-instance-attributes,too-many-arguments,invalid-name,fixme,too-many-return-statements,too-many-lines,too-many-branches,import-outside-toplevel,wrong-import-position,wrong-import-order,import-error,missing-class-docstring

# ---------------------------------- Documentation  ----------------------------------

.docs:
  before_script:
    - apt-get update && apt-get -y install virtualenv
    - virtualenv doc_env
    - source doc_env/bin/activate
    - pip install -U pip
    - pip install -U -r doc/doc_requirements.txt

pages_test:
  stage: Documentation test
  extends: .docs
  except:
    - master
  when: manual
  script:
    - mkdocs build --site-dir public_test
  artifacts:
    paths:
      - public_test

# -------------------------------------- Tests -------------------------------------- 

.tests:
  stage: Tests
  allow_failure: false
  variables:
    OTB_ROOT: /opt/otb
    LD_LIBRARY_PATH: /opt/otb/lib
    OTB_LOGGER_LEVEL: INFO
    PYOTB_LOGGER_LEVEL: DEBUG
    IMAGE_URL: https://gitlab.orfeo-toolbox.org/orfeotoolbox/otb/-/raw/develop/Data/Input/SP67_FR_subset_1.tif?inline=false
    TEST_INPUT_IMAGE: tests/image.tif
  artifacts:
    reports:
      junit: test-*.xml
  before_script:
    - wget $IMAGE_URL -O $TEST_INPUT_IMAGE
    - pip install pytest

test_core:
  extends: .tests
  script:
    - python3 -m pytest --color=yes --junitxml=test-core.xml tests/test_core.py

test_numpy:
  extends: .tests
  script:
    - python3 -m pytest --color=yes --junitxml=test-numpy.xml tests/test_numpy.py

test_pipeline:
  #when: manual
  extends: .tests
  script:
    - python3 -m pytest --color=yes --junitxml=test-pipeline.xml tests/test_pipeline.py

test_serialization:
  extends: .tests
  script:
    - python3 -m pytest --color=yes --junitxml=test-serialization.xml tests/test_serialization.py

# -------------------------------------- Ship --------------------------------------- 

pages:
  stage: Ship
  extends: .docs
  only:
    - master
  script:
    - mkdocs build --site-dir public
  artifacts:
    paths:
      - public

pypi:
  stage: Ship
  only:
   - master
  before_script:
   - python3 -m pip install --upgrade build twine
  script:
   - python3 -m build
   - python3 -m twine upload --repository pyotb --non-interactive -u __token__ -p $pypi_token dist/*
