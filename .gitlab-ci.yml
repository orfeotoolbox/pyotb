default:
  image:
    name: $CI_REGISTRY/orfeotoolbox/otb-build-env/otb-ubuntu-native-develop-headless:20.04
  tags:
    - light
  interruptible: true

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_REF_NAME =~ /master/

stages:
  - Install
  - Static Analysis
  - Tests
  - Documentation test
  - Ship

#  ------------------------------ Installation in venv ------------------------------
install:
  stage: Install
  script:
    - apt update && apt install -y python3.8-venv
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install ".[dev]"

#  -------------------------------- Static analysis --------------------------------

.static_analysis:
  stage: Static Analysis
  needs: ["install"]
  allow_failure: true

codespell:
  extends: .static_analysis
  #rules:
  #  - changes:
  #      - pyotb/*.py
  #      - tests/*.py
  #      - doc/*.md
  #      - README.md
  script:
    - source venv/bin/activate
    - codespell {pyotb,tests,doc,README.md}

pydocstyle:
  extends: .static_analysis
  #rules:
  #  - changes:
  #      - pyotb/*.py
  script:
    - source venv/bin/activate
    - pydocstyle $PWD/pyotb

pylint:
  extends: .static_analysis
  #rules:
  #  - changes:
  #      - pyotb/*.py
  script:
    - source venv/bin/activate
    - pylint $PWD/pyotb

# -------------------------------------- Tests --------------------------------------

.tests:
  stage: Tests
  needs: ["install"]
  allow_failure: false
  #rules:
  #  - changes:
  #      - pyotb/*.py
  #      - tests/*.py
  variables:
    OTB_ROOT: /opt/otb
    LD_LIBRARY_PATH: /opt/otb/lib
    OTB_LOGGER_LEVEL: INFO
    PYOTB_LOGGER_LEVEL: DEBUG
  artifacts:
    reports:
      junit: test-*.xml

test_core:
  extends: .tests
  script:
    - source venv/bin/activate
    - pytest --color=yes --junitxml=test-core.xml tests/test_core.py

test_numpy:
  extends: .tests
  script:
    - source venv/bin/activate
    - pytest --color=yes --junitxml=test-numpy.xml tests/test_numpy.py

test_pipeline:
  extends: .tests
  script:
    - source venv/bin/activate
    - pytest --color=yes --junitxml=test-pipeline.xml tests/test_pipeline.py

# ---------------------------------- Documentation  ----------------------------------
.docs:
  before_script:
    - python3 -m venv docs_venv
    - source docs_venv/bin/activate
    - pip install -U -r doc/doc_requirements.txt
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - docs_venv

docs_test:
  stage: Documentation test
  extends: .docs
  when: manual
  script:
    - mkdocs build --site-dir public_test
  artifacts:
    paths:
      - public_test

# -------------------------------------- Ship ---------------------------------------

docs:
  stage: Ship
  extends: .docs
  when: manual
  only:
    - master
  script:
    - mkdocs build --site-dir public
  artifacts:
    paths:
      - public

pypi:
  stage: Ship
  #when: manual
  #only:
  # - master
  before_script:
    - pip install --upgrade build twine
  script:
    - python3 -m build
    #- python3 -m twine upload --repository-url https://upload.pypi.org/legacy/ --non-interactive -u __token__ -p $pypi_token dist/*
  artifacts:
    paths:
      - dist/
